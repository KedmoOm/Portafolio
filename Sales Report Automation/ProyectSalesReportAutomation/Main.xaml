<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="470,371" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="96">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Services.RuntimeAnalyze</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.Word.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <ueab:SequenceX DisplayName="Single Excel Process Scope" sap:VirtualizedContainerService.HintSize="680.0000000000001,2557.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;productsSold.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="productsSold" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ProductsSold" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilterProducts" />
      <Variable x:TypeArguments="x:Double" Name="Total" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;Jan&quot;,&quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot; , &quot;Dec&quot;}]" Name="str_ArrayMonth" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ProductNames" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Quantity" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilterNames" />
      <Variable x:TypeArguments="x:Int32" Name="TotalQuantity" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Names" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Sheet2" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Sheet3" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Group" sap:VirtualizedContainerService.HintSize="620.8,2534.4" sap2010:WorkflowViewState.IdRef="Sequence_34">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Calculate monthy Total Sales" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="Sequence_41">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="712,3318.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
          <ueab:ExcelProcessScopeX.Body>
            <ActivityAction x:TypeArguments="ui:IExcelProcess">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
              </ActivityAction.Argument>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="678.4,3208.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[string.Format(&quot;{0}\Input&quot;, System.IO.Directory.GetCurrentDirectory())]" sap:VirtualizedContainerService.HintSize="664,3171.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                  <ui:ForEachFileX.Body>
                    <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                      <ActivityAction.Argument1>
                        <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                      </ActivityAction.Argument1>
                      <ActivityAction.Argument2>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                      </ActivityAction.Argument2>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="630.4,2884" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File CurrentFile" sap:VirtualizedContainerService.HintSize="616,2846.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" KeepExcelFileOpen="True" ResizeWindow="Maximize" SensitivityOperation="None" TemplatePath="Input\productsSold.xlsx" UseTemplate="True" WorkbookPath="[CurrentFile.FullName]">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelProducts" />
                              </ActivityAction.Argument>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="582.4,2530.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:InsertSheetX DisplayName="Insert Sheet in CurrentFile" sap:VirtualizedContainerService.HintSize="568,56.8" sap2010:WorkflowViewState.IdRef="InsertSheetX_5" Name="DefaultContent" Workbook="[ExcelProducts]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:InsertSheetX>
                                <ueab:CopyPasteRangeX DestinationRange="[ExcelProducts.Sheet(&quot;DefaultContent&quot;)]" DisplayName="Copy/Paste content of Sheet1 in DefaultContent" sap:VirtualizedContainerService.HintSize="568,56.8" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_4" PasteOptions="All" SourceRange="[ExcelProducts.Sheet(&quot;sheet1&quot;)]" Transpose="False">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:CopyPasteRangeX>
                                <Sequence DisplayName="Change currency to number" sap:VirtualizedContainerService.HintSize="568,56.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click in column E" sap:VirtualizedContainerService.HintSize="416,225.6" sap2010:WorkflowViewState.IdRef="NClick_3" InScope="[ExcelProducts]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelProducts" Version="V4">
                                    <uix:NClick.Target>
                                      <uix:TargetAnchorable CVScreenId="5c7ed975-f2d7-4a60-9f3d-9e2f408dfb55" ContentHash="b_GH7RvCGEiDVRTnrN9J7g" CvTextArea="540, 281, 11, 17" CvTextArgument="E" CvType="Text" DesignTimeRectangle="495, 279, 104, 24" DesignTimeScaleFactor="1.25" FuzzySelectorArgument="&lt;uia automationid='Grid' cls='XLSpreadsheetGrid' name='Cuadrícula' /&gt;&lt;uia cls='XLGridColumnHeader' name='E' role='Encabezado de columna' automationid='' check:fulltext='E' /&gt;" Guid="562700f5-da62-4455-9b8d-a8550a722edc" InformativeScreenshot="2eb2d6699d31f792824e487a0ee0704e.png" Reference="i58gpHehoUenj_vA_yj2pQ/gzuvklrOLEyaxQ3EOX_nlw" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='productsSold.xlsx - Excel' /&gt;" SearchSteps="FuzzySelector, CV" Version="V4" Visibility="Interactive">
                                        <uix:TargetAnchorable.Anchors>
                                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                            <uix:Target CVScreenId="5c7ed975-f2d7-4a60-9f3d-9e2f408dfb55" CvTextArea="435, 281, 15, 17" CvTextArgument="D" CvType="Text" DesignTimeRectangle="391, 279, 104, 24" FullSelectorArgument="&lt;uia automationid='Grid' cls='XLSpreadsheetGrid' name='Cuadrícula' /&gt;&lt;uia cls='XLGridColumnHeader' name='D' tableCol='4' tableRow='0' /&gt;" FuzzySelectorArgument="&lt;uia automationid='Grid' cls='XLSpreadsheetGrid' name='Cuadrícula' /&gt;&lt;uia cls='XLGridColumnHeader' name='D' role='Encabezado de columna' automationid='' check:fulltext='D' /&gt;" Guid="809b6c05-f3d6-47a2-81c1-ba6b27d3f708" SearchSteps="Selector, FuzzySelector, CV" />
                                          </scg:List>
                                        </uix:TargetAnchorable.Anchors>
                                      </uix:TargetAnchorable>
                                    </uix:NClick.Target>
                                    <uix:NClick.VerifyOptions>
                                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                        <uix:VerifyExecutionOptions.Retry>
                                          <InArgument x:TypeArguments="x:Boolean" />
                                        </uix:VerifyExecutionOptions.Retry>
                                        <uix:VerifyExecutionOptions.Timeout>
                                          <InArgument x:TypeArguments="x:Double" />
                                        </uix:VerifyExecutionOptions.Timeout>
                                      </uix:VerifyExecutionOptions>
                                    </uix:NClick.VerifyOptions>
                                  </uix:NClick>
                                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click in format" sap:VirtualizedContainerService.HintSize="416,225.6" sap2010:WorkflowViewState.IdRef="NClick_4" InScope="[ExcelProducts]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelProducts" Version="V4">
                                    <uix:NClick.Target>
                                      <uix:TargetAnchorable CVScreenId="b4ac5320-c703-4058-b231-338b1051bd37" ContentHash="icC2d2PcGEq2K94PnHFHzA" CvElementArea="692, 109, 115, 31" CvType="InputBox" DesignTimeRectangle="789, 112, 16, 28" DesignTimeScaleFactor="1.25" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Inicio' /&gt;&lt;uia cls='NetUIChunk' name='Número' /&gt;&lt;uia automationid='NumberFormatGallery' cls='NetUIComboboxAnchor' name='Formato de número' /&gt;&lt;uia cls='NetUIStickyButton' name='Abrir' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Inicio' /&gt;&lt;uia cls='NetUIChunk' name='Número' /&gt;&lt;uia automationid='NumberFormatGallery' cls='NetUIComboboxAnchor' name='Formato de número' /&gt;&lt;uia cls='NetUIStickyButton' name='Abrir' role='Botón' automationid='' check:fulltext='Abrir' /&gt;" Guid="ec58b128-c1e1-4278-8146-12ec382e80bc" InformativeScreenshot="686c53829ae51016524990039cd998d9.png" Reference="i58gpHehoUenj_vA_yj2pQ/tDuPi5tyVU2-vzBMyZ57vQ" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='productsSold.xlsx - Excel' /&gt;" SearchSteps="Selector, FuzzySelector, CV" Version="V4" Visibility="Interactive">
                                        <uix:TargetAnchorable.Anchors>
                                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                            <uix:Target CVScreenId="b4ac5320-c703-4058-b231-338b1051bd37" CvElementArea="777, 149, 26, 16" CvType="Icon" DesignTimeRectangle="775, 147, 30, 20" ElementType="Icon" Guid="2c918367-b0d4-412c-9846-8a49dc4624d9" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAB4AAAAUCAYAAACaq43EAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAEGSURBVEhL7ZOxDYMwEEWzjmdgBkZgAQZgAFpaSjpaKkpKFnP0LH3rZNmWgpSQguLLzjm+9+98vJxz/g494J/pv8Fd12XjTdME5c5Kd6QqeBgGv22bn+fZH8fh27aNZ+u6Ri3LEuMA932Pd0oGqmAuat/3fYCwH8cxJNYZcQEwqi5g1OawKoIB2UrQeZ5hJbmtns5gBCBniiOqzz1HETxNU5CNkcSuEiYBa7VndIO4jaEiWIls7Ao4lwdVK06TXAHT+tyAffTGGpT0jRk2xFumptLfUhGMAGkw6ADJ2WNKEy6Y/sdeFebMS1WwvkmUJqClVJ62EgOKY06GUlXB39QD/pluAjv/Bt8x6mSQpsMuAAAAAElFTkSuQmCC" SearchSteps="CV" TargetType="ComputerVisionBased" />
                                          </scg:List>
                                        </uix:TargetAnchorable.Anchors>
                                      </uix:TargetAnchorable>
                                    </uix:NClick.Target>
                                    <uix:NClick.VerifyOptions>
                                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                        <uix:VerifyExecutionOptions.Retry>
                                          <InArgument x:TypeArguments="x:Boolean" />
                                        </uix:VerifyExecutionOptions.Retry>
                                        <uix:VerifyExecutionOptions.Timeout>
                                          <InArgument x:TypeArguments="x:Double" />
                                        </uix:VerifyExecutionOptions.Timeout>
                                      </uix:VerifyExecutionOptions>
                                    </uix:NClick.VerifyOptions>
                                  </uix:NClick>
                                  <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="416,213.6" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_2" InScope="[ExcelProducts]" ScopeIdentifier="ExcelProducts" Shortcuts="[d(hk)][k(Down)][u(hk)][d(hk)][k(Down)][u(hk)][d(hk)][k(enter)][u(hk)]" Version="V4">
                                    <uix:NKeyboardShortcuts.VerifyOptions>
                                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                        <uix:VerifyExecutionOptions.Retry>
                                          <InArgument x:TypeArguments="x:Boolean" />
                                        </uix:VerifyExecutionOptions.Retry>
                                        <uix:VerifyExecutionOptions.Timeout>
                                          <InArgument x:TypeArguments="x:Double" />
                                        </uix:VerifyExecutionOptions.Timeout>
                                      </uix:VerifyExecutionOptions>
                                    </uix:NKeyboardShortcuts.VerifyOptions>
                                  </uix:NKeyboardShortcuts>
                                </Sequence>
                                <ueab:ReadRangeX DisplayName="Read Range of CurrentFile" sap:VirtualizedContainerService.HintSize="568,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[ExcelProducts.Sheet(&quot;sheet1&quot;)]" SaveTo="[dt_ProductsSold]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ReadRangeX>
                                <ueab:InsertSheetX DisplayName="Insert Sheet in CurrentFile" sap:VirtualizedContainerService.HintSize="568,220" sap2010:WorkflowViewState.IdRef="InsertSheetX_4" Name="Sheet2" Workbook="[ExcelProducts]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:InsertSheetX>
                                <ueab:WriteCellX Cell="[ExcelProducts.Sheet(&quot;Sheet2&quot;).Cell(&quot;A1&quot;)]" DisplayName="Write Date header" sap:VirtualizedContainerService.HintSize="568,56.8" sap2010:WorkflowViewState.IdRef="WriteCellX_11" Value="[string.Format(&quot;Date&quot;)]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:WriteCellX>
                                <ueab:WriteCellX Cell="[ExcelProducts.Sheet(&quot;Sheet2&quot;).Cell(&quot;B1&quot;)]" DisplayName="Write Total per month header" sap:VirtualizedContainerService.HintSize="568,56.8" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[string.Format(&quot;Total of each product per month&quot;)]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:WriteCellX>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Month in str_ArrayMonth" sap:VirtualizedContainerService.HintSize="568,1570.4" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[str_ArrayMonth]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                      </ActivityAction.Argument>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="534.4,1135.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:FilterDataTable DataTable="[dt_ProductsSold]" DisplayName="Filter Data Table Products Sold" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="500.8,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_FilterProducts]" SelectColumnsMode="Remove">
                                          <ui:FilterDataTable.Filters>
                                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                              <ui:FilterOperationArgument BooleanOperator="And" Operator="STARTSWITH">
                                                <ui:FilterOperationArgument.Column>
                                                  <InArgument x:TypeArguments="x:String">[string.Format("Date")]</InArgument>
                                                </ui:FilterOperationArgument.Column>
                                                <ui:FilterOperationArgument.Operand>
                                                  <InArgument x:TypeArguments="x:String">[string.Format(currentText)]</InArgument>
                                                </ui:FilterOperationArgument.Operand>
                                              </ui:FilterOperationArgument>
                                            </scg:List>
                                          </ui:FilterDataTable.Filters>
                                          <ui:FilterDataTable.SelectColumns>
                                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                                              <x:Null />
                                            </scg:List>
                                          </ui:FilterDataTable.SelectColumns>
                                        </ui:FilterDataTable>
                                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_FilterProducts]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="500.8,392" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                          <ui:ForEachRow.Body>
                                            <ActivityAction x:TypeArguments="sd:DataRow">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                              </ActivityAction.Argument>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Calculate the Total" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_2">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[Total]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Total + CDbl(CurrentRow("Total price"))]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEachRow.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ForEachRow>
                                        <ueab:WriteCellX AutoIncrementRow="True" Cell="[ExcelProducts.Sheet(&quot;Sheet2&quot;).Cell(&quot;A2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="500.8,192" sap2010:WorkflowViewState.IdRef="WriteCellX_12" Value="[currentText]" />
                                        <ueab:WriteCellX AutoIncrementRow="True" Cell="[ExcelProducts.Sheet(&quot;Sheet2&quot;).Cell(&quot;B2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="500.8,192" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[Total.ToString]" />
                                        <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="500.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Double">[Total]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Double">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Close Excel" sap:VirtualizedContainerService.HintSize="568,216.8" sap2010:WorkflowViewState.IdRef="NClick_5" InScope="[ExcelProducts]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelProducts" Version="V4">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable CVScreenId="95b4a3ef-eab2-4f09-bddb-909af9fab0eb" ContentHash="-aDJD5txckyaICcx4LmIoA" CvElementArea="1727, 27, 22, 22" CvType="CloseButton" DesignTimeRectangle="1709, 9, 60, 60" DesignTimeScaleFactor="1.25" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Cerrar' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Cerrar' role='Botón' automationid='' check:fulltext='Cerrar' /&gt;" Guid="4dd74784-14c5-4973-a822-a6292759fa15" InformativeScreenshot="f1fd037cceec86e7ceb73a3482935655.png" Reference="i58gpHehoUenj_vA_yj2pQ/6L28EeFbjUCu3VdB6XP2Bg" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='productsSold.xlsx - Excel' /&gt;" SearchSteps="Selector, FuzzySelector, CV" Version="V4" Visibility="Interactive">
                                      <uix:TargetAnchorable.Anchors>
                                        <scg:List x:TypeArguments="uix:ITarget" Capacity="4">
                                          <uix:Target CVScreenId="95b4a3ef-eab2-4f09-bddb-909af9fab0eb" CvElementArea="1666, 27, 23, 23" CvType="MaximizeButton" DesignTimeRectangle="1649, 9, 60, 60" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Restaurar' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Restaurar' role='Botón' automationid='' check:fulltext='Restaurar' /&gt;" Guid="835ad38c-b331-47e2-9ca6-799ead7fe47c" SearchSteps="Selector, FuzzySelector, CV" />
                                        </scg:List>
                                      </uix:TargetAnchorable.Anchors>
                                    </uix:TargetAnchorable>
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                </uix:NClick>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachFileX.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachFileX>
              </Sequence>
            </ActivityAction>
          </ueab:ExcelProcessScopeX.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ueab:ExcelProcessScopeX>
      </Sequence>
      <Sequence DisplayName="Quantity sold per Product" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="Sequence_42">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="712,3498.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
          <ueab:ExcelProcessScopeX.Body>
            <ActivityAction x:TypeArguments="ui:IExcelProcess">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
              </ActivityAction.Argument>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="678.4,3388.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[string.Format(&quot;{0}\Input&quot;, System.IO.Directory.GetCurrentDirectory())]" sap:VirtualizedContainerService.HintSize="664,3351.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_3" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                  <ui:ForEachFileX.Body>
                    <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                      <ActivityAction.Argument1>
                        <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                      </ActivityAction.Argument1>
                      <ActivityAction.Argument2>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                      </ActivityAction.Argument2>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="630.4,3064" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use Excel CurrentFile" sap:VirtualizedContainerService.HintSize="616,3026.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" KeepExcelFileOpen="True" ResizeWindow="Maximize" SensitivityOperation="None" TemplatePath="Input\productsSold.xlsx" UseTemplate="True" WorkbookPath="[CurrentFile.FullName]">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelProduct" />
                              </ActivityAction.Argument>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="582.4,2710.4" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:InsertSheetX DisplayName="Insert New Sheet in CurrentFile" sap:VirtualizedContainerService.HintSize="568,220" sap2010:WorkflowViewState.IdRef="InsertSheetX_3" Name="Sheet3" Workbook="[ExcelProduct]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:InsertSheetX>
                                <ueab:ReadRangeX DisplayName="Read Range of Product Sold" sap:VirtualizedContainerService.HintSize="568,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[ExcelProduct.Sheet(&quot;sheet1&quot;).Range(&quot;C:C&quot;)]" SaveTo="[dt_ProductNames]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ReadRangeX>
                                <ueab:WriteRangeX Destination="[ExcelProduct.Sheet(&quot;Sheet3&quot;)]" DisplayName="Write Product names to Sheet3" sap:VirtualizedContainerService.HintSize="568,192" sap2010:WorkflowViewState.IdRef="WriteRangeX_5" IgnoreEmptySource="False" Source="[dt_ProductNames]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:WriteRangeX>
                                <ueab:RemoveDuplicatesX DisplayName="Remove Duplicates Names" sap:VirtualizedContainerService.HintSize="568,245.6" sap2010:WorkflowViewState.IdRef="RemoveDuplicatesX_2" Range="[ExcelProduct.Sheet(&quot;Sheet3&quot;).Range(&quot;A:A&quot;)]">
                                  <ueab:RemoveDuplicatesX.Columns>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                      <InArgument x:TypeArguments="x:String">Product sold</InArgument>
                                    </scg:List>
                                  </ueab:RemoveDuplicatesX.Columns>
                                </ueab:RemoveDuplicatesX>
                                <ueab:WriteCellX Cell="[ExcelProduct.Sheet(&quot;Sheet3&quot;).Cell(&quot;B1&quot;)]" DisplayName="Write the Total Quantity in Sheet3" sap:VirtualizedContainerService.HintSize="568,192" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[string.Format(&quot;Total Quantity sold&quot;)]" />
                                <ueab:ReadRangeX DisplayName="Read Range Names Products" sap:VirtualizedContainerService.HintSize="568,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_6" Range="[ExcelProduct.Sheet(&quot;Sheet3&quot;).Range(&quot;A:A&quot;)]" SaveTo="[dt_Names]" />
                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Names]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="568,1372" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="534.4,1144.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ReadRangeX DisplayName="Read Range of Sheet1" sap:VirtualizedContainerService.HintSize="500.8,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_5" Range="[ExcelProduct.Sheet(&quot;sheet1&quot;).Range(&quot;C:D&quot;)]" SaveTo="[dt_Quantity]" />
                                        <ui:FilterDataTable DataTable="[dt_Quantity]" DisplayName="Filter Data Table for its Name" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="500.8,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dt_FilterNames]" SelectColumnsMode="Keep">
                                          <ui:FilterDataTable.Filters>
                                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                <ui:FilterOperationArgument.Column>
                                                  <InArgument x:TypeArguments="x:String">["Product sold"]</InArgument>
                                                </ui:FilterOperationArgument.Column>
                                                <ui:FilterOperationArgument.Operand>
                                                  <InArgument x:TypeArguments="x:String">[CurrentRow("Product sold").ToString()]</InArgument>
                                                </ui:FilterOperationArgument.Operand>
                                              </ui:FilterOperationArgument>
                                            </scg:List>
                                          </ui:FilterDataTable.Filters>
                                          <ui:FilterDataTable.SelectColumns>
                                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                                              <InArgument x:TypeArguments="x:String">[string.Format("Quantity sold")]</InArgument>
                                              <InArgument x:TypeArguments="x:String">[string.Format("Product sold")]</InArgument>
                                            </scg:List>
                                          </ui:FilterDataTable.SelectColumns>
                                        </ui:FilterDataTable>
                                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_FilterNames]" DisplayName="For Each Row in the FilterNames Table" sap:VirtualizedContainerService.HintSize="500.8,392" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                          <ui:ForEachRow.Body>
                                            <ActivityAction x:TypeArguments="sd:DataRow">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRowFilter" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[TotalQuantity]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[TotalQuantity + CInt(CurrentRowFilter("Quantity sold").ToString())]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEachRow.Body>
                                        </ui:ForEachRow>
                                        <ueab:WriteCellX AutoIncrementRow="True" Cell="[ExcelProduct.Sheet(&quot;Sheet3&quot;).Cell(&quot;B2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="500.8,192" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[TotalQuantity]" />
                                        <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="500.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_7">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[TotalQuantity]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                </ui:ForEachRow>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Close Excel" sap:VirtualizedContainerService.HintSize="568,48" sap2010:WorkflowViewState.IdRef="NClick_6" InScope="[ExcelProduct]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelProduct" Version="V4">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable CVScreenId="95b4a3ef-eab2-4f09-bddb-909af9fab0eb" ContentHash="-aDJD5txckyaICcx4LmIoA" CvElementArea="1727, 27, 22, 22" CvType="CloseButton" DesignTimeRectangle="1709, 9, 60, 60" DesignTimeScaleFactor="1.25" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Cerrar' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Cerrar' role='Botón' automationid='' check:fulltext='Cerrar' /&gt;" Guid="4dd74784-14c5-4973-a822-a6292759fa15" InformativeScreenshot="f1fd037cceec86e7ceb73a3482935655.png" Reference="i58gpHehoUenj_vA_yj2pQ/6L28EeFbjUCu3VdB6XP2Bg" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='productsSold.xlsx - Excel' /&gt;" SearchSteps="Selector, FuzzySelector, CV" Version="V4" Visibility="Interactive">
                                      <uix:TargetAnchorable.Anchors>
                                        <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                          <uix:Target CVScreenId="95b4a3ef-eab2-4f09-bddb-909af9fab0eb" CvElementArea="1666, 27, 23, 23" CvType="MaximizeButton" DesignTimeRectangle="1649, 9, 60, 60" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Restaurar' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Barra de herramientas Ribbon' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Restaurar' role='Botón' automationid='' check:fulltext='Restaurar' /&gt;" Guid="835ad38c-b331-47e2-9ca6-799ead7fe47c" SearchSteps="Selector, FuzzySelector, CV" />
                                        </scg:List>
                                      </uix:TargetAnchorable.Anchors>
                                    </uix:TargetAnchorable>
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </uix:NClick>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachFileX.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachFileX>
              </Sequence>
            </ActivityAction>
          </ueab:ExcelProcessScopeX.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ueab:ExcelProcessScopeX>
      </Sequence>
      <p:WordApplicationScope SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use templateReport File" FilePath="plantillaReport.docx" sap:VirtualizedContainerService.HintSize="587.2,2337.6" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2" SensitivityOperation="None">
        <p:WordApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WordDocument">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="553.6,2148.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Date in Document" sap:VirtualizedContainerService.HintSize="539.2,56.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[System.DateTime.Today.ToString(&quot;dd/MM/yyyy&quot;)]" ReplaceAll="True" Search="-Date">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace invoince number in Document" sap:VirtualizedContainerService.HintSize="539.2,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="[New System.Random().Next(2000, 7000).ToString]" ReplaceAll="True" Search="-Number" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Ttitle in Document" sap:VirtualizedContainerService.HintSize="539.2,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_4" Replace="Montly Total Sales and Quantity Sold per Product:" ReplaceAll="True" Search="-Title1" />
              <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[string.Format(&quot;{0}\Input&quot;, System.IO.Directory.GetCurrentDirectory())]" sap:VirtualizedContainerService.HintSize="539.2,1526.4" sap2010:WorkflowViewState.IdRef="ForEachFileX_4" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                <ui:ForEachFileX.Body>
                  <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                    <ActivityAction.Argument1>
                      <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                    </ActivityAction.Argument1>
                    <ActivityAction.Argument2>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                    </ActivityAction.Argument2>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,1232" sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="491.2,1194.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" SensitivityOperation="None" TemplatePath="Input\productsSold.xlsx" UseTemplate="True" WorkbookPath="[CurrentFile.FullName]">
                        <ueab:ExcelApplicationCard.Body>
                          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="457.6,878.4" sap2010:WorkflowViewState.IdRef="Sequence_36">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:ReadRangeX DisplayName="Read Sheet2" sap:VirtualizedContainerService.HintSize="443.2,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_7" Range="[Excel.Sheet(&quot;Sheet2&quot;).Range(&quot;A:B&quot;)]" SaveTo="[dt_Sheet2]" />
                              <ueab:ReadRangeX DisplayName="Read Sheet3" sap:VirtualizedContainerService.HintSize="443.2,201.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_8" Range="[Excel.Sheet(&quot;Sheet3&quot;)]" SaveTo="[dt_Sheet3]" />
                              <p:WordInsertDataTable Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" Text="{x:Null}" DataTable="[dt_Sheet2]" DisplayName="Insert Montly total sales in Document" sap:VirtualizedContainerService.HintSize="443.2,223.2" sap2010:WorkflowViewState.IdRef="WordInsertDataTable_3" InsertRelativeTo="Document" Position="End" />
                              <p:WordInsertDataTable Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" Text="{x:Null}" DataTable="[dt_Sheet3]" DisplayName="Insert Quantity sold per product in Document" sap:VirtualizedContainerService.HintSize="443.2,214.4" sap2010:WorkflowViewState.IdRef="WordInsertDataTable_5" InsertRelativeTo="Document" Position="End" />
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelApplicationCard.Body>
                      </ueab:ExcelApplicationCard>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachFileX.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachFileX>
              <p:WordExportToPdf DisplayName="Save Report as PDF" FilePath="[&quot;Output\Report&quot; + System.DateTime.Today.ToString(&quot;-dd-MM-yyyy&quot;) +&quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="539.2,134.4" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
            </Sequence>
          </ActivityAction>
        </p:WordApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </p:WordApplicationScope>
    </Sequence>
  </ueab:SequenceX>
</Activity>